CREATE TABLE `users` (
  `id` INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `first_name` VARCHAR(100) NOT NULL,
  `last_name` VARCHAR(100) NOT NULL,
  `email` VARCHAR(100) NOT NULL UNIQUE,
  `phone` VARCHAR(15),
  `password` VARCHAR(50) NOT NULL,
  `verification` VARCHAR( 32 ) NOT NULL,
  `is_verified` BOOLEAN DEFAULT 0,
  `is_being_edited` BOOLEAN DEFAULT 0,
  `type` ENUM('Consumer', 'Winery Manager', 'Blog Writer', 'Admin') NOT NULL DEFAULT 'Consumer',
  `description` TEXT,
  `created_at` DATETIME DEFAULT CURRENT_TIMESTAMP,
  `modified_at` DATETIME ON UPDATE CURRENT_TIMESTAMP
);

// guide
https://www.mikedane.com/databases/sql/

// query to see if is subscribed
select users.*, if(users.email = newsletter_subscribers.email, true, false) as 'is_subscribed'
from users, newsletter_subscribers

CREATE TABLE `newsletter_subscribers` (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  user_id INT NOT NULL UNIQUE,
  email VARCHAR(100) NOT NULL UNIQUE,
  did_unsubscribe BOOLEAN DEFAULT 0,
  signed_up_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE 'billing_addresses' (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  user_id INT NOT NULL,
  street_address VARCHAR(255) NOT NULL,
  town VARCHAR(100) NOT NULL,
  province VARCHAR(100) NOT NULL,
  country VARCHAR(100) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  modified_at DATETIME ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE 'shipping_addresses' (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  user_id INT NOT NULL,
  street_address VARCHAR(255) NOT NULL,
  town VARCHAR(100) NOT NULL,
  province VARCHAR(100) NOT NULL,
  country VARCHAR(100) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  modified_at DATETIME ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE 'featured_items' (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  article_id INT NOT NULL,
  monthly_winery_ids VARCHAR(255) NOT NULL,
  popular_winery_ids VARCHAR(255) NOT NULL,
  modified_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE 'wineries' (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  manager_id VARCHAR(255),
  tier ENUM('VIP', 'Premium', 'Regular') NOT NULL DEFAULT 'Regular',
  name VARCHAR(100) NOT NULL,
  email VARCHAR(100) NOT NULL,
  phone VARCHAR(15) NOT NULL,
  website VARCHAR(2083),
  image BLOB NOT NULL,
  description TEXT NOT NULL,
  street_address VARCHAR(255) NOT NULL,
  town VARCHAR(100) NOT NULL,
  province VARCHAR(100) NOT NULL,
  country VARCHAR(100) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  modified_at DATETIME ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE 'events' (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  manager_id VARCHAR(255),
  name VARCHAR(100) NOT NULL,
  start_date DATETIME NOT NULL,
  end_date DATETIME NOT NULL,
  description TEXT NOT NULL,
  website VARCHAR(2083),
  image BLOB NOT NULL,
  street_address VARCHAR(255),
  town VARCHAR(100) NOT NULL,
  province VARCHAR(100) NOT NULL,
  country VARCHAR(100) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  modified_at DATETIME ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE 'blog_articles' (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  author_id INT NOT NULL,
  title VARCHAR(100) NOT NULL UNIQUE,
  short_title VARCHAR(20) NOT NULL,
  synopsis VARCHAR(2083) NOT NULL,
  content TEXT NOT NULL,
  image BLOB NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
  modified_at DATETIME ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE 'blog_comments' (
  id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  article_id INT NOT NULL,
  author_id INT NOT NULL,
  comment VARCHAR(280) NOT NULL,
  created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);